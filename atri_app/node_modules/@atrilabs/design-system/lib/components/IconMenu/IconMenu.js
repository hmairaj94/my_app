var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { amber200, gray900 } from "../../consts/colors";
// controlled component
export var IconMenu = function (props) {
    return (_jsxs("div", __assign({ onClick: props.onClick, style: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            width: "2.5rem",
            overflow: "hidden",
            height: "100%",
            background: props.active ? gray900 : "",
            cursor: "pointer",
        } }, { children: [props.children, props.active ? (_jsx("div", { style: {
                    position: "absolute",
                    height: "2px",
                    backgroundColor: "".concat(amber200),
                    bottom: 0,
                } })) : null] })));
};
//# sourceMappingURL=IconMenu.js.map