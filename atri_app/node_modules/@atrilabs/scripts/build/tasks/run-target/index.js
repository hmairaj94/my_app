#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var yargs_1 = __importDefault(require("yargs"));
var runTargetTask_1 = require("../../shared/runTargetTask");
var utils_1 = require("../../shared/utils");
var args = (0, yargs_1.default)(process.argv.slice(2))
    .option("task", {
    alias: "t",
    describe: "task to run - generate/build/deploy",
    choices: ["generate", "build", "deploy"],
})
    .option("target", {
    alias: "o",
    describe: "target name to run",
    type: "string",
})
    .demandOption(["task", "target"])
    .help().argv;
var toolPkgInfo = (0, utils_1.getToolPkgInfo)();
if (!(args instanceof Promise)) {
    var targetName_1 = args.target;
    var task_1 = args.task;
    (0, utils_1.importToolConfig)(toolPkgInfo.configFile).then(function (toolConfig) {
        var target = toolConfig.targets.find(function (curr) { return curr.targetName === targetName_1; });
        if (target)
            (0, runTargetTask_1.runTargetTask)(toolConfig, target, task_1);
        else
            console.log("Cannot find target ".concat(targetName_1, " in tool.config.js"));
    });
}
//# sourceMappingURL=index.js.map