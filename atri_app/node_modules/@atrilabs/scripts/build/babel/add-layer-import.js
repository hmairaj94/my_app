"use strict";
/**
 *
 * @param {*} babel
 * @param {{getImports: (filename: string)=>{namedImports: string[], path: string}[]}} options
 */
module.exports = function (babel, options) {
    var visited = {};
    return {
        visitor: {
            Program: function (path, parent) {
                // visit only once
                if (visited[parent.filename] === undefined) {
                    visited[parent.filename] = true;
                }
                else {
                    return;
                }
                if (options.getImports === undefined) {
                    return;
                }
                var importDefs = options.getImports(parent.filename);
                // schema check
                if (importDefs && Array.isArray(importDefs) && importDefs.length > 0) {
                    var result_1 = parent.file.code + "\n";
                    importDefs.forEach(function (importDef) {
                        // schema check
                        if (importDef.path && Array.isArray(importDef.namedImports)) {
                            result_1 += "import {".concat(importDef.namedImports.join(", "), "} from \"").concat(importDef.path, "\"");
                        }
                    });
                    path.replaceWith(babel.parse(result_1).program);
                }
            },
        },
    };
};
//# sourceMappingURL=add-layer-import.js.map