"use strict";
/**
 *
 * @param {babel} babel
 * @param {{manifestJsPath: string, manifests: string[]}} options
 * @returns
 */
module.exports = function (babel, options) {
    var defaultImportsVisitor = {
        VariableDeclarator: function (path) {
            if (path.get("id").node.name === "defaultImports") {
                var init = path.get("init");
                var expr = options.manifests
                    .map(function (m, index) {
                    return "man".concat(index);
                })
                    .join(",");
                init.replaceWith(babel.template.expression.ast("[".concat(expr, "]")));
            }
        },
    };
    return {
        visitor: {
            Program: function (path, parent) {
                // put if condition here
                if (options.manifestJsPath &&
                    parent.filename.includes(options.manifestJsPath)) {
                    path.traverse(defaultImportsVisitor);
                    options.manifests.forEach(function (m, index) {
                        var importNode = babel.template.statement.ast("import man".concat(index, " from \"").concat(m, "\";"));
                        path.unshiftContainer("body", importNode);
                    });
                }
            },
        },
    };
};
//# sourceMappingURL=add-default-exports-to-manifest-js.js.map