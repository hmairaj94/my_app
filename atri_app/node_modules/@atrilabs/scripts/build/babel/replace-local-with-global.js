"use strict";
var callExprVisitor = {
    CallExpression: function (path) {
        var options = this.options;
        var filename = this.filename;
        var map = options.getNameMap(filename);
        if (map === undefined) {
            return;
        }
        if (path.node.callee.name === "menu" &&
            path.get("arguments.0") &&
            path.get("arguments.0").type === "StringLiteral" &&
            map.menu) {
            var name_1 = path.get("arguments.0").node.value;
            var menu = map.menu;
            if (menu[name_1]) {
                path.get("arguments.0").replaceWithSourceString("\"".concat(menu[name_1], "\""));
            }
        }
        if (path.node.callee.name === "container" &&
            path.get("arguments.0") &&
            path.get("arguments.0").type === "StringLiteral" &&
            map.containers) {
            var name_2 = path.get("arguments.0").node.value;
            var containers = map.containers;
            if (containers[name_2]) {
                path
                    .get("arguments.0")
                    .replaceWithSourceString("\"".concat(containers[name_2], "\""));
            }
        }
        if (path.node.callee.name === "tab" &&
            path.get("arguments.0") &&
            path.get("arguments.0").type === "StringLiteral" &&
            map.tabs) {
            var name_3 = path.get("arguments.0").node.value;
            var tabs = map.tabs;
            if (tabs[name_3]) {
                path.get("arguments.0").replaceWithSourceString("\"".concat(tabs[name_3], "\""));
            }
        }
    },
};
/**
 *
 * @param {*} babel
 * @param {{getNameMap: (filename: string)=>{menu?: {[localname: string]: string},containers?: {[localname: string]: string},tabs?: {[localname: string]: string}}|undefined}} options
 * @returns
 */
module.exports = function (babel, options) {
    return {
        visitor: {
            Program: {
                enter: function (path, parent) {
                    var filename = parent.filename;
                    path.traverse(callExprVisitor, { options: options, filename: filename });
                },
            },
        },
    };
};
//# sourceMappingURL=replace-local-with-global.js.map