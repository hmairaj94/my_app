import { useEffect, useState } from "react";
import { BrowserForestManager } from "./browserForestManager";
/**
 *
 * @param name name of the tree
 */
export var useTree = function (name) {
    var getTree = function (name) {
        try {
            return BrowserForestManager.currentForest.tree(name);
        }
        catch (err) {
            console.log(err);
            throw Error("Tree with name ".concat(name, " not found in currentForest"));
        }
    };
    var _a = useState(getTree(name)), tree = _a[0], setTree = _a[1];
    // listen for reset of current forest
    useEffect(function () {
        var unsubscribe = BrowserForestManager.currentForest.on("reset", function () {
            setTree(getTree(name));
        });
        return function () {
            unsubscribe();
        };
    }, [name, setTree]);
    return tree;
};
//# sourceMappingURL=useTree.js.map