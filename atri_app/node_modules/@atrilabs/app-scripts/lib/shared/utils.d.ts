import { Stats } from "webpack";
export declare const imageInlineSizeLimit: number;
export declare const moduleFileExtensions: string[];
export declare type BuildTypes = "development" | "production";
export declare type BuildAppOptions = {
    mode: BuildTypes;
    appEntry: string;
    appHtml: string;
    appOutput: string;
    includes: string[];
    addWatchOptions: boolean;
    wsClientEntry?: string;
    assetUrlPrefix: string;
};
export declare function buildApp(options: BuildAppOptions): import("webpack").Compiler;
export declare type BuildServerOptions = {
    mode: BuildTypes;
    serverEntry: string;
    serverOutput: string;
    includes: string[];
    allowList: string[];
    addWatchOptions: boolean;
    serverSideEntry: string;
};
export declare function buildServer(options: BuildServerOptions): import("webpack").Compiler;
export declare function getMode(): BuildTypes;
export declare function setNodeAndBabelEnv(mode: BuildTypes): void;
export declare const buildInfoFilename = "atri-build-info.json";
export declare const buildInfoFile: string;
export declare const serverInfoFilename = "atri-server-info.json";
export declare const serverInfoFile: string;
export declare const ssgOutputPath: string;
export declare function buildAppWithDefaults(): Promise<Stats>;
export declare function buildServerWithDefaults(): Promise<Stats>;
//# sourceMappingURL=utils.d.ts.map